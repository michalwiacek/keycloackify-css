{"version":3,"file":"static/js/45.c083df54.chunk.js","mappings":"4XAEA,MCSe,SAAeA,GAC1B,IAAQC,EAAcD,EAAdC,WAERC,EAAAA,EAAAA,IAAiB,CACbD,UAAAA,EACA,qBAAuB,WAAvB,8BAAwB,mGAASE,EAAT,EAASA,mBAAT,SACSC,MACxB,WACG,OAAQD,GACJ,IAAK,KACD,OAAOE,EACX,IAAK,KACD,OAAOC,EACX,QACI,OAAOC,EAElB,CATA,IAUHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IAZK,cACdC,EADc,yBAcbA,GAda,2CAAxB,mDAAuB,KAkB3B,IAAMC,GAAOC,EAAAA,EAAAA,IAAQ,CACjBZ,UAAAA,EAKA,cAAiB,CACb,GAAM,CACF,IAAO,iBAGP,iBAAoB,wBAExB,GAAM,CACF,IAAO,gBAGP,iBAAoB,kCAExB,GAAM,CAEF,IAAO,kBACP,iBAAoB,sCAOhC,OAAa,OAATW,EACO,MAIP,SAAC,MAAD,QACIX,UAAWA,EACXW,KAAMA,IAFV,kBAIWE,EAAAA,IAJX,IAMQ,qBAAwB,sBAMvC,C","sources":["KcApp/index.ts","KcApp/KcApp.tsx"],"sourcesContent":["import KcApp from \"./KcApp\";\nexport * from \"./KcApp\";\nexport default KcApp;\n","import \"./KcApp.css\";\nimport type { KcContext } from \"./kcContext\";\nimport KcAppBase, { defaultKcProps, useDownloadTerms, useI18n } from \"keycloakify\";\nimport tos_en_url from \"./tos_en.md\";\nimport tos_fr_url from \"./tos_fr.md\";\nimport tos_pl_url from \"./tos_pl.md\";\n\nexport type Props = {\n    kcContext: KcContext;\n};\n\nexport default function KcApp(props: Props) {\n    const { kcContext } = props;\n\n    useDownloadTerms({\n        kcContext,\n        \"downloadTermMarkdown\": async ({ currentLanguageTag }) => {\n            const markdownString = await fetch(\n                (() => {\n                    switch (currentLanguageTag) {\n                        case \"fr\":\n                            return tos_fr_url;\n                        case 'pl':\n                            return tos_pl_url;\n                        default:\n                            return tos_en_url;\n                    }\n                })(),\n            ).then(response => response.text());\n\n            return markdownString;\n        },\n    });\n\n    const i18n = useI18n({\n        kcContext,\n        // NOTE: Here you can override the default i18n messages\n        // or define new ones that, for example, you would have\n        // defined in the Keycloak admin UI for UserProfile\n        // https://user-images.githubusercontent.com/6702424/182050652-522b6fe6-8ee5-49df-aca3-dba2d33f24a5.png\n        \"extraMessages\": {\n            \"en\": {\n                \"foo\": \"foo in English\",\n                // Here we overwrite the default english value for the message \"doForgotPassword\" \n                // that is \"Forgot Password?\" see: https://github.com/InseeFrLab/keycloakify/blob/f0ae5ea908e0aa42391af323b6d5e2fd371af851/src/lib/i18n/generated_messages/18.0.1/login/en.ts#L17\n                \"doForgotPassword\": \"I forgot my password\"\n            },\n            \"pl\": {\n                \"foo\": \"foo po Polsku\",\n                // Here we overwrite the default english value for the message \"doForgotPassword\" \n                // that is \"Forgot Password?\" see: https://github.com/InseeFrLab/keycloakify/blob/f0ae5ea908e0aa42391af323b6d5e2fd371af851/src/lib/i18n/generated_messages/18.0.1/login/en.ts#L17\n                \"doForgotPassword\": \"Nie pamiętasz hasła?\"\n            },\n            \"fr\": {\n                /* spell-checker: disable */\n                \"foo\": \"foo en Francais\",\n                \"doForgotPassword\": \"J'ai oublié mon mot de passe\"\n                /* spell-checker: enable */\n            },\n        },\n    });\n\n    //NOTE: Locale not yet downloaded\n    if (i18n === null) {\n        return null;\n    }\n\n    return (\n        <KcAppBase\n            kcContext={kcContext}\n            i18n={i18n}\n            {...{\n                ...defaultKcProps,\n                // NOTE: The classes are defined in ./KcApp.css\n                \"kcHeaderWrapperClass\": \"my-color my-font\",\n            }}\n            //Uncomment the following line if you want to prevent the default .css to be downloaded\n            //doFetchDefaultThemeResources={false} \n        />\n    );\n}\n"],"names":["props","kcContext","useDownloadTerms","currentLanguageTag","fetch","tos_fr_url","tos_pl_url","tos_en_url","then","response","text","markdownString","i18n","useI18n","defaultKcProps"],"sourceRoot":""}